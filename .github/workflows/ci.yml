name: CI Build and Package

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Полная история для версионирования

    - name: Clean workspace
      run: |
        # Полная очистка предыдущих сборок
        rm -rf build
        rm -rf */build
        rm -f CMakeCache.txt

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          build-essential \
          debhelper \
          valgrind

    - name: Configure project (clean build)
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
                 -DCMAKE_MAKE_PROGRAM=make \
                 --no-warn-unused-cli

    - name: Build project
      working-directory: ./build
      run: |
        cmake --build . --config ${{ env.BUILD_TYPE }} \
              --parallel $(nproc) \
              --verbose

    - name: Run tests
      working-directory: ./build
      run: |
        ctest --output-on-failure \
              --parallel $(nproc) \
              --timeout 10

    - name: Create DEB package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      working-directory: ./build
      run: |
        # Получаем версию из тега
        VERSION=${GITHUB_REF#refs/tags/v}
        
        # Создаем структуру пакета
        mkdir -p ../package/usr/local/bin
        install -D -m 755 ./main ../package/usr/local/bin/builder-pattern
        
        # Генерируем control файл
        mkdir -p ../package/DEBIAN
        cat > ../package/DEBIAN/control <<EOF
        Package: builder-pattern
        Version: $VERSION
        Section: devel
        Priority: optional
        Architecture: amd64
        Maintainer: Your Name <your.email@example.com>
        Description: Builder Pattern Implementation
        EOF
        
        # Собираем пакет
        dpkg-deb --build ../package ../builder-pattern_${VERSION}_amd64.deb

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          builder-pattern_*.deb
          build/compile_commands.json
